 /* Auto-generated by genmsg_cpp for file /tmp/buildd/ros-diamondback-ros-comm-1.4.8/debian/ros-diamondback-ros-comm/opt/ros/diamondback/stacks/ros_comm/messages/std_msgs/msg/String.msg */ #ifndef STD_MSGS_MESSAGE_STRING_H
 #define STD_MSGS_MESSAGE_STRING_H
 #include <string>
 #include <vector>
 #include <ostream>
 #include "ros/serialization.h"
 #include "ros/builtin_message_traits.h"
 #include "ros/message_operations.h"
 #include "ros/message.h"
 #include "ros/time.h"
 
 
 namespace std_msgs
 {
 template <class ContainerAllocator>
 struct String_ : public ros::Message
 {
   typedef String_<ContainerAllocator> Type;
 
   String_()
   : data()
   {
   }

   String_(const ContainerAllocator& _alloc)
   : data(_alloc)
   {
   }
 
   typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _data_type;
   std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  data;
 
 
 private:
   static const char* __s_getDataType_() { return "std_msgs/String"; }
 public:
   ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

   ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }
 
 private:
   static const char* __s_getMD5Sum_() { return "992ce8a1687cec8c8bd883ec73ca41d1"; }
 public:
   ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }
 
   ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }
 
 private:
   static const char* __s_getMessageDefinition_() { return "string data\n\
 \n\
 "; }
 public:
   ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }
 
   ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

   ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
   {
     ros::serialization::OStream stream(write_ptr, 1000000000);
     ros::serialization::serialize(stream, data);
    return stream.getData();
   }

   ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
   {
     ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, data);
     return stream.getData();
  }

   ROS_DEPRECATED virtual uint32_t serializationLength() const
   {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(data);
     return size;
   }

   typedef boost::shared_ptr< ::std_msgs::String_<ContainerAllocator> > Ptr;
   typedef boost::shared_ptr< ::std_msgs::String_<ContainerAllocator>  const> ConstPtr;
 }; // struct String
 typedef  ::std_msgs::String_<std::allocator<void> > String;
 
 typedef boost::shared_ptr< ::std_msgs::String> StringPtr;
 typedef boost::shared_ptr< ::std_msgs::String const> StringConstPtr;

 template<typename ContainerAllocator>
 std::ostream& operator<<(std::ostream& s, const  ::std_msgs::String_<ContainerAllocator> & v)
 {
  ros::message_operations::Printer< ::std_msgs::String_<ContainerAllocator> >::stream(s, "", v);
   return s;}
 
 } // namespace std_msgs
 
 namespace ros
 {
 namespace message_traits
 {
 template<class ContainerAllocator>
 struct MD5Sum< ::std_msgs::String_<ContainerAllocator> > {
   static const char* value() 
   {
     return "992ce8a1687cec8c8bd883ec73ca41d1";
   }
 
   static const char* value(const  ::std_msgs::String_<ContainerAllocator> &) { return value(); }    static const uint64_t static_value1 = 0x992ce8a1687cec8cULL;
   static const uint64_t static_value2 = 0x8bd883ec73ca41d1ULL;
 };
 
 template<class ContainerAllocator>
 struct DataType< ::std_msgs::String_<ContainerAllocator> > {
   static const char* value() 
   {
     return "std_msgs/String";
   }
 
   static const char* value(const  ::std_msgs::String_<ContainerAllocator> &) { return value(); } 
 };
 
 template<class ContainerAllocator>
 struct Definition< ::std_msgs::String_<ContainerAllocator> > {
   static const char* value() 
   {
     return "string data\n\
 \n\
 ";
   }
 
   static const char* value(const  ::std_msgs::String_<ContainerAllocator> &) { return value(); } 
 };
 
 } // namespace message_traits
 } // namespace ros
 
 namespace ros
 {
 namespace serialization
 {
 
 template<class ContainerAllocator> struct Serializer< ::std_msgs::String_<ContainerAllocator> >
 {
   template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
   {
     stream.next(m.data);
   }
 
   ROS_DECLARE_ALLINONE_SERIALIZER;
 }; // struct String_
 } // namespace serialization
 } // namespace ros
 
 namespace ros
 {
 namespace message_operations
 {
 
 template<class ContainerAllocator>
 struct Printer< ::std_msgs::String_<ContainerAllocator> >
 {
   template<typename Stream> static void stream(Stream& s, const std::string& indent, const  ::std_msgs::String_<ContainerAllocator> & v) 
   {
     s << indent << "data: ";
     Printer<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > >::stream(s, indent + "  ", v.data);
   }
 };
 } // namespace message_operations
 } // namespace ros
 
 #endif // STD_MSGS_MESSAGE_STRING_H

